{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Parameter Metadata Language Schema, Informative",
  "description": "The (informative) schema for the Parameter Metadata Language from Section 5 of E1.37-5. This schema is subject to change.",
  "definitions": {
    "bitType": {
      "description": "Describes the meaning of one bit in a bit field.",
      "type": "object",
      "properties": {
        "name": { "$ref": "#/definitions/nameType" },
        "index": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [ "name", "index" ]
    },
    "bitFieldType": {
      "description": "A bit field, a collection of 'bit' items.",
      "properties": {
        "name": { "$ref": "#/definitions/nameType" },
        "type": { "const": "bitField" },
        "bits": {
          "type": "array",
          "items": { "$ref": "#/definitions/bitType" },
          "uniqueItems": true
        }
      },
      "required": [ "type", "bits" ]
    },
    "commandType": {
      "description": "Represents an RDM command, a collection of 'field' items, each a simple or compound type.",
      "type": "array",
      "items": { "$ref": "#/definitions/oneOfTypes" },
      "uniqueItems": true
    },
    "compoundType": {
      "description": "Defines a compound type, a type used to combine other types. This is useful for including in lists.",
      "type": "object",
      "properties": {
        "name": { "$ref": "#/definitions/nameType" },
        "type": { "const": "compound" },
        "subtypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/oneOfTypes"
          }
        }
      },
      "required": [ "type", "subtypes" ]
    },
    "integerType": {
      "description": "A signed or unsigned integer, can have an optional prefix, unit, and range.",
      "properties": {
        "name": { "$ref": "#/definitions/nameType" },
        "type": {
          "enum": [
            "int8",
            "int16",
            "int32",
            "int64",
            "uint8",
            "uint16",
            "uint32",
            "uint64"
          ]
        },
        "labels": {
          "description": "A list of labels that name special values.",
          "type": "array",
          "items": { "$ref": "#/definitions/labeledIntegerType" },
          "uniqueItems": true
        },
        "prefix": {
          "description": "The unit prefix, defined in Table A-14 of E1.20.",
          "type": "integer",
          "minimum": 0,
          "maximum": 255
        },
        "ranges": {
          "description": "A list of possible ranges for the value. The complete range is the union of all the ranges.",
          "type": "array",
          "items": { "$ref": "#/definitions/rangeType" },
          "uniqueItems": true
        },
        "unit": {
          "description": "The unit type, defined in Table A-13 of E1.20.",
          "type": "integer",
          "minimum": 0,
          "maximum": 255
        }
      },
      "required": [ "type" ]
    },
    "labeledIntegerType": {
      "description": "Associates a name to an integer value.",
      "type": "object",
      "properties": {
        "name": { "$ref": "#/definitions/nameType" },
        "value": { "type": "integer" }
      },
      "required": [ "value" ]
    },
    "listType": {
      "description": "A list of objects all having the same type.",
      "type": "object",
      "properties": {
        "name": { "$ref": "#/definitions/nameType" },
        "type": { "const": "list" },
        "itemType": {
          "$ref": "#/definitions/oneOfTypes"
        },
        "minItems": {
          "description": "The minimum list size.",
          "type": "integer",
          "minimum": 0
        },
        "maxItems": {
          "description": "The maximum list size.",
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [ "type", "itemType" ]
    },
    "nameType": {
      "description": "A name is a string having a length of at least 1.",
      "type": "string",
      "minLength": 1
    },
    "oneOfTypes": {
      "description": "One of any of the types. This provides a single location to keep the list.",
      "oneOf": [
        { "$ref": "#/definitions/bitFieldType" },
        { "$ref": "#/definitions/compoundType" },
        { "$ref": "#/definitions/integerType" },
        { "$ref": "#/definitions/listType" },
        { "$ref": "#/definitions/pdEnvelopeType" },
        { "$ref": "#/definitions/simpleType" },
        { "$ref": "#/definitions/stringType" }
      ]
    },
    "pdEnvelopeType": {
      "description": "Contains a length/data pair for one Parameter Data item, where the length is an unsigned 8-bit value and the data has 'length' bytes. This exists to provide a schema definition for the 'envelope' of a PDL/PD pair.",
      "type": "object",
      "properties": {
        "type": { "const": "pdEnvelope" },
        "length": {
          "description": "The data length can be optionally specified.",
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [ "type" ]
    },
    "rangeType": {
      "description": "Defines an inclusive range of numbers.",
      "type": "object",
      "properties": {
        "minimum": {
          "description": "The lower bound, inclusive.",
          "type": "integer"
        },
        "maximum": {
          "description": "The upper bound, inclusive.",
          "type": "integer"
        }
      },
      "required": [ "minimum", "maximum" ]
    },
    "simpleType": {
      "description": "Simple type that has no fields other than a name and type.",
      "type": "object",
      "properties": {
        "name": { "$ref": "#/definitions/nameType" },
        "type": {
          "enum": [
            "bool",
            "hostname",
            "ipv4",
            "ipv6",
            "uid"
          ]
        }
      },
      "required": [ "type" ]
    },
    "stringType": {
      "description": "A string having a possibly bounded size.",
      "properties": {
        "name": { "$ref": "#/definitions/nameType" },
        "type": { "const": "string" },
        "minLength": {
          "description": "The minimum string length.",
          "type": "integer",
          "minimum": 0
        },
        "maxLength": {
          "description": "The maximum string length.",
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [ "type" ]
    }
  },
  "type": "object",
  "properties": {
    "name": { "$ref": "#/definitions/nameType" },
    "pid": {
      "type": "integer",
      "minimum": 0,
      "maximum": 65535
    },
    "version": {
      "type": "integer",
      "minimum": 0,
      "maximum": 65535
    },
    "get_request": { "$ref": "#/definitions/commandType" },
    "get_response": { "$ref": "#/definitions/commandType" },
    "set_request": { "$ref": "#/definitions/commandType" },
    "set_response": { "$ref": "#/definitions/commandType" }
  },
  "required": [ "name", "pid", "version" ],
  "dependencies": {
    "get_request": [ "get_response" ],
    "get_response": [ "get_request" ],
    "set_request": [ "set_response" ],
    "set_response": [ "set_request" ]
  }
}â€ƒ
